import "strings"
import "types"

_modules = {
	"root": {
		"data": {},
		"path": [],
		"resources": {
			"aws_security_group_rule": {
				"allow_all": {
					0: {
						"applied": {
							"cidr_blocks":       null,
							"description":       null,
							"from_port":         0,
							"ipv6_cidr_blocks":  null,
							"prefix_list_ids":   null,
							"protocol":          "tcp",
							"security_group_id": "sg-008b502d0a24d0136",
							"self":              true,
							"to_port":           65535,
							"type":              "ingress",
						},
						"destroy": false,
						"diff": {
							"cidr_blocks": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"description": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"from_port": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"ipv6_cidr_blocks": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"prefix_list_ids": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"protocol": {
								"computed": false,
								"new":      "tcp",
								"old":      "",
							},
							"security_group_id": {
								"computed": false,
								"new":      "sg-008b502d0a24d0136",
								"old":      "",
							},
							"self": {
								"computed": false,
								"new":      "true",
								"old":      "",
							},
							"source_security_group_id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"to_port": {
								"computed": false,
								"new":      "65535",
								"old":      "",
							},
							"type": {
								"computed": false,
								"new":      "ingress",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "0.12.9"

variables = {}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
